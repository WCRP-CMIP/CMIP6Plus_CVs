name: Source_ID_dispatch

on:
  repository_dispatch:
    types:
      - source_id

jobs:
  process-payload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Print Payload
        run: |
          echo "Received Payload:"
          echo "Key: ${{ github.event.client_payload.key }}"
          echo "json: ${{ github.event.client_payload.record }}"
          echo "author: ${{ github.event.client_payload.author }}"
          echo "source: ${{ github.event.client_payload.name }}"

          # echo "contents=${GH_TOKEN}" >> $GITHUB_ENV
        

      # - name: Run Python Check
      #   id: 'run-python-script'
      #   run: |
          
      #     python .github.lib/source_id.py -k ${{ github.event.client_payload.key }} -r ${{ github.event.client_payload.record }}
          
      #   env:
      #     PYTHON_SCRIPT_OUTPUT: ${{ steps.run-python-script.outputs.stdout }}
      #     PYTHON_SCRIPT_ERROR: ${{ steps.run-python-script.outputs.stderr }}
      #   continue-on-error: false


      # - name: Create and push new branch
      #   run: |

      #     github_username=${{ github.event.client_payload.author }}
          
      #     # Set Git user config locally
      #     git config --global user.email "${github_username}@users.noreply.github.com"
      #     git config --global user.name "${github_username}"
      #     # Set the branch names
      #     new_branch="source_id_${{ github.event.client_payload.name }}"
          
      #     # Create a new branch
      #     git checkout -b $new_branch
          

      #     # Commit and push the changes
      #     git add *source_id.json
      #     git commit -m "Adding a new source_id ${{ github.event.client_payload.name }}"
      #     git push origin $new_branch
       
      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ github.event.client_payload.author }}
        run: |  


          repository="${{ github.repository }}"
          github_token="${{ secrets.GITHUB_TOKEN }}"


          base_branch="main"
          feature_branch="source_id_${{ github.event.client_payload.name }}"

          git pull
          
          remote_branch="origin/$feature_branch"
          echo "bi"
          branch_info=$(git rev-parse --verify "$remote_branch" >/dev/null 2>&1 || true)
          echo "branch info: $branch_info"

          if [ -n "$branch_info" ]; then
              echo "checkout existing"
              git checkout $feature_branch
              git reset --hard origin/main

          else
              echo "checkout new"
              git checkout -b $feature_branch;
          fi

          content=$(python .github/libs/source_id.py -k ${{ github.event.client_payload.key }} -r ${{ github.event.client_payload.record }})

          git config --global user.email "${GITHUB_USERNAME}@users.noreply.github.com"
          git config --global user.name "${GITHUB_USERNAME}"


          git add *source_id.json
          git commit -m "Adding ${{ github.event.client_payload.name }} to source_id"
          git push origin $feature_branch --force

          
          if [ -n "$branch_info" ]; then
            pull_requests=$(curl -s -H "Authorization: token $github_token" \
            "https://api.github.com/repos/$repository/pulls?state=open&head=$feature_branch" | jq -r '.[].number')

            # base is main, head is our branch. 

            echo "pull requests ${pull_requests}";
            # Iterate through each pull request and add the comment
            for pr_number in $pull_requests; do
              # author=$(curl -s -H "Authorization: token $github_token" \
              #     "https://api.github.com/repos/$repository/pulls/$pr_number" | jq -r '.user.login')

              echo "running pull request $pr_number"  ;
              # keep indentation of comment_body !important
              comment_body="This pull request (#$pr_number) was automatically updated by a GitHub Actions workflow.

          Data submitted by @${{github.event.client_payload.author}}

          Adding the following updated data.
          \`\`\`json
              $content
          \`\`\` "
              # escaped=$(echo "$comment_body" | sed 's/"/\\"/g')
              echo "comment- $comment_body"

              # # Add comment to the pull request
              # curl -s -H "Authorization: token $github_token" \
              #     -x POST -d '{"body": "$comment_body"}' \
              #     "https://api.github.com/repos/$repository/issues/$pr_number/comments" 
              #     # > /dev/null

              gh pr comment $pr_number --body "$comment_body"

              echo "Comment added to pull request  #$pr_number"
            done

          else


            echo "clean pull"
            gh pr create --base $base_branch --head $feature_branch --title "New Source ID - add ${{ github.event.client_payload.name }}" --body \
            "This pull request was automatically created by a GitHub Actions workflow.
            
            Data submitted by @${{github.event.client_payload.author}}
            
            Adding the following new data.
            \`\`\`json
            $content
            \`\`\`
            
            " --reviewer $GITHUB_USERNAME


          fi
      
